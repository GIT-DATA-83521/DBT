Q1.

sudo apt-get install gnupg curl


====================================================================================================================================================================

Q2.
curl -fsSL https://www.mongodb.org/static/pgp/server-7.0.asc | \
   sudo gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg \
   --dearmor

====================================================================================================================================================================

Q3.
echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list


====================================================================================================================================================================

Q4.


sudo systemctl start mongod


====================================================================================================================================================================

Q5.

sunbeam@sunbeam-Inspiron-3593:~$ mongosh
Current Mongosh Log ID:	65f55cb0333a90912bdb83af
Connecting to:		mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.0
Using MongoDB:		7.0.6
Using Mongosh:		2.2.0

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2024-03-16T14:12:20.065+05:30: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
   2024-03-16T14:12:22.252+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
   2024-03-16T14:12:22.253+05:30: vm.max_map_count is too low
------

====================================================================================================================================================================
Q6.

test> show dbs
admin   40.00 KiB
config  12.00 KiB
local   72.00 KiB


=====================================================================================================================================================================
Q7.

cdac> use cdac

=====================================================================================================================================================================
Q8.

cdac> show collections


=====================================================================================================================================================================
Q9.

cdac> db.createCollection("library")
{ ok: 1 }
cdac> show collections
library

=====================================================================================================================================================================
Q10.

cdac> db.library.insert({title:'MongoDB programming',author:'Sameer',likes:100})
DeprecationWarning: Collection.insert() is deprecated. Use insertOne, insertMany, or bulkWrite.
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('65f56529333a90912bdb83b0') }
}

=====================================================================================================================================================================
Q11.

cdac> db.library.find()
[
  {
    _Id: Objectid('65f56529333a90912bdb83b0'),
    title: 'MongoDB programming',
    author: 'Sameer',
    likes: 100
  }
]

=====================================================================================================================================================================
Q12.

cdac> db.library.insert({title:'MySQL Programming',authors:['Jack','Jill'],likes:200,price:150})
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('65f566c7333a90912bdb83b1') }
}
cdac> show collections
library
cdac> db.library.find().pretty()
[
  {
    _id: ObjectId('65f56529333a90912bdb83b0'),
    title: 'MongoDB programming',
    author: 'Sameer',
    likes: 100
  },
  {
    _id: ObjectId('65f566c7333a90912bdb83b1'),
    title: 'MySQL Programming',
    authors: [ 'Jack', 'Jill' ],
    likes: 200,
    price: 150
  }
]

=====================================================================================================================================================================
Q13.

dac> show collections
library
cdac> db.library.find().pretty()
[
  {
    _id: ObjectId('65f56529333a90912bdb83b0'),
    title: 'MongoDB programming',
    author: 'Sameer',
    likes: 100
  },
  {
    _id: ObjectId('65f566c7333a90912bdb83b1'),
    title: 'MySQL Programming',
    authors: [ 'Jack', 'Jill' ],
    likes: 200,
    price: 150
  }
]


=====================================================================================================================================================================
Q14.

cdac> db.library.findOne()
{
  _id: ObjectId('65f56529333a90912bdb83b0'),
  title: 'MongoDB programming',
  author: 'Sameer',
  likes: 100
}

=====================================================================================================================================================================

Q15.


cdac> db.library.find().pretty()
[
  {
    _id: ObjectId('65f56529333a90912bdb83b0'),
    title: 'MongoDB programming',
    author: 'Sameer',
    likes: 100
  },
  {
    _id: ObjectId('65f566c7333a90912bdb83b1'),
    title: 'MySQL Programming',
    authors: [ 'Jack', 'Jill' ],
    likes: 200,
    price: 150
  }
]

=====================================================================================================================================================================
Q16.

cdac> db.library.update({author:'Sameer'},{$set:{author:'Sameer Dehadrai'}})
DeprecationWarning: Collection.update() is deprecated. Use updateOne, updateMany, or bulkWrite.
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
cdac> show collections
library

cdac> db.library.findOne()
{
  _id: ObjectId('65f56529333a90912bdb83b0'),
  title: 'MongoDB programming',
  author: 'Sameer Dehadrai',
  likes: 100
}

=====================================================================================================================================================================

Q17.


cdac> db.library.remove({likes:100})
DeprecationWarning: Collection.remove() is deprecated. Use deleteOne, deleteMany, findOneAndDelete, or bulkWrite.
{ acknowledged: true, deletedCount: 1 }
cdac> show collections
library
cdac> db.library.find().pretty()
[
  {
    _id: ObjectId('65f566c7333a90912bdb83b1'),
    title: 'MySQL Programming',
    authors: [ 'Jack', 'Jill' ],
    likes: 200,
    price: 150
  }
]
=====================================================================================================================================================================

Q18.

	cdac> db.library.drop()
true
cdac> show collections

=====================================================================================================================================================================

Q19.

cdac> db.library.drop()
true
cdac> show collections

cdac> db.dropDatabase()
{ ok: 1, dropped: 'cdac' }
cdac> show dbs
admin    40.00 KiB
config  108.00 KiB
local    72.00 KiB
=====================================================================================================================================================================

Q20.

cdac> exit


=====================================================================================================================================================================




